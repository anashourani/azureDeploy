{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"isFirstRun": {
			"type": "bool",
			"defaultValue": false
		},
		"storageUrlSasToken": {
			"type": "SecureString",
			"metadata": {
				"description": ""
			}
		},
		"storageUrl": {
			"type": "string",
			"metadata": {
				"description": ""
			}
		},
		"mmcSubscription": {
			"type": "string",
			"defaultValue": "870c74b2-27fe-412c-9032-bd688d4e6877"
		},
		"mmcProdRG": {
			"type": "string",
			"defaultValue": "MMCProduction"
		},
		"defaultTags": {
			"type": "object",
			"defaultValue": {
				"Client": "MMC",
				"Environment": "Production"
			}
		},
		"tenantId": {
			"type": "string",
			"defaultValue": "9ba7faee-93a8-49a5-b6aa-e0d3e0c62948",
			"metadata": {
				"description": "Tenant Id for the subscription and use assigned access to the vault. Available from the Get-AzureRMSubscription PowerShell cmdlet"
			}
		},
		"name": {
			"type": "String",
			"defaultValue": "Task_513918-FTP1_ftproot2_KCIRounds"
		},
		"displayName": {
			"type": "String",
			"defaultValue": "Task_513918-FTP1_ftproot2_KCIRounds"
		},
		"gatewayName": {
			"type": "String",
			"defaultValue": "MMC-Integration-Gateway"
		},
		"vaultName": {
			"type": "String",
			"defaultValue": "MMCChamberOfSecrets"
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]"
		},
		"tags": {
			"type": "object",
			"defaultValue": {
				"Client": "KCI",
				"Environment": "Production"
			}
		},
		"omsWorkspaceName": {
			"type": "string",
			"defaultValue": "MMCOMSWorkspaceProd"
		},
		"actionGroupList": {
			"type": "array",
			"metadata": {
				"description": "List of Action Groups to be created."
			}
		},
		"applicationInsightsList": {
			"type": "array",
			"metadata": {
				"description": "List of Application Insights to be created."
			}
		},
		"pingTestList": {
			"type": "array",
			"metadata": {
				"description": "List of Application Insights Ping pingTestList to be created."
			}
		},
		"logcAppFirstRuns": {
			"type": "object",
			"defaultValue": {
				"KCIRounds": false
			}
		}
	},
	"resources": [
		{
			"apiVersion": "2017-05-10",
			"name": "GateWayTemplate",
			"type": "Microsoft.Resources/deployments",
			"condition": "[parameters('isFirstRun')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('storageUrl'), '/NestedTemplates/gateway.json', parameters('storageUrlSasToken'))]",
					"contentVersion": "1.0.0.0"
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "VaultTemplate",
			"type": "Microsoft.Resources/deployments",
			"condition": "[parameters('isFirstRun')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('storageUrl'), '/NestedTemplates/vault.json', parameters('storageUrlSasToken'))]",
					"contentVersion": "1.0.0.0"
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "VaultSecretTemplate",
			"type": "Microsoft.Resources/deployments",
			"condition": "[parameters('isFirstRun')]",
			"dependsOn": [
				"VaultTemplate"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('storageUrl'), '/NestedTemplates/vaultsecret.json', parameters('storageUrlSasToken'))]",
					"contentVersion": "1.0.0.0"
				}
			}
		},
		{
			"apiVersion": "2017-03-15-preview",
			"location": "[resourceGroup().location]",
			"name": "[parameters('omsWorkspaceName')]",
			"tags": "[parameters('defaultTags')]",
			"type": "Microsoft.OperationalInsights/workspaces",
			"comments": "Log Analytics workspace",
			"properties": {
				"sku": {
					"name": "standalone"
				},
				"retentionInDays": 31
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "KCIRoundsReport_LogicApp_Template",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('storageUrl'), '/NestedTemplates/KCIRoundsEmailPollLogicApp.json', parameters('storageUrlSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"storageUrl": {
						"value": "[parameters('storageUrl')]"
					},
					"storageUrlSasToken": {
						"value": "[parameters('storageUrlSasToken')]"
					},
					"mmcSubscription": {
						"value": "[parameters('mmcSubscription')]"
					},
					"mmcProdRG": {
						"value": "[parameters('mmcProdRG')]"
					},
					"vaultName": {
						"value": "[parameters('vaultName')]"
					},
					"gatewayName": {
						"value": "[parameters('gatewayName')]"
					},
					"isFirstRun": {
						"value": "[parameters('logcAppFirstRuns').KCIRounds]"
					},
					"taskusername": {
						"reference": {
							"keyVault": {
								"id": "[concat('/subscriptions/', parameters('mmcSubscription'), '/resourceGroups/',  parameters('mmcProdRG'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
							},
							"secretName": "Tasks-User"
						}
					},
					"taskpassword": {
						"reference": {
							"keyVault": {
								"id": "[concat('/subscriptions/', parameters('mmcSubscription'), '/resourceGroups/',  parameters('mmcProdRG'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
							},
							"secretName": "Tasks-Password"
						}
					},
					"omsusername": {
						"reference": {
							"keyVault": {
								"id": "[concat('/subscriptions/', parameters('mmcSubscription'), '/resourceGroups/',  parameters('mmcProdRG'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
							},
							"secretName": "MMCOMSWorkspaceProd-Username"
						}
					},
					"omspassword": {
						"reference": {
							"keyVault": {
								"id": "[concat('/subscriptions/', parameters('mmcSubscription'), '/resourceGroups/',  parameters('mmcProdRG'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
							},
							"secretName": "MMCOMSWorkspaceProd-Password"
						}
					}
				}
			}
		},
		{
			"type": "Microsoft.Insights/actionGroups",
			"apiVersion": "2018-03-01",
			"name": "[parameters('actionGroupList')[copyIndex()].name]",
			"location": "Global",
			"properties": {
				"groupShortName": "[parameters('actionGroupList')[copyIndex()].shortName]",
				"enabled": "[parameters('actionGroupList')[copyIndex()].enabled]",
				"smsReceivers": "[parameters('actionGroupList')[copyIndex()].smsReceivers]",
				"emailReceivers": "[parameters('actionGroupList')[copyIndex()].emailReceivers]",
				"webhookReceivers": "[parameters('actionGroupList')[copyIndex()].webHookReceivers]"
			},
			"copy": {
				"name": "actionGroupListLoop",
				"count": "[length(parameters('actionGroupList'))]"
			}
		},
		{
			"type": "Microsoft.Insights/components",
			"kind": "[parameters('applicationInsightsList')[copyIndex()].kind]",
			"name": "[parameters('applicationInsightsList')[copyIndex()].name]",
			"apiVersion": "2014-04-01",
			"location": "[parameters('applicationInsightsList')[copyIndex()].location]",
			"tags": "[parameters('applicationInsightsList')[copyIndex()].tags]",
			"properties": {
				"ApplicationId": "[parameters('applicationInsightsList')[copyIndex()].name]"
			},
			"copy": {
				"name": "applicationInsightsListLoop",
				"count": "[length(parameters('applicationInsightsList'))]"
			}
		},
		{
			"name": "[concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName)]",
			"type": "Microsoft.Insights/webtests",
			"apiVersion": "2014-04-01",
			"location": "[parameters('pingTestList')[copyIndex()].location]",
			"dependsOn": [
				"[concat('Microsoft.Insights/components/', parameters('pingTestList')[copyIndex()].applicationInsightsName)]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('pingTestList')[copyIndex()].applicationInsightsName))]": "Resource"
			},
			"properties": {
				"Name": "[concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName)]",
				"Description": "[parameters('pingTestList')[copyIndex()].description]",
				"Enabled": "[parameters('pingTestList')[copyIndex()].enabled]",
				"Frequency": "[parameters('pingTestList')[copyIndex()].frequency]",
				"Timeout": "[parameters('pingTestList')[copyIndex()].timeout]",
				"Kind": "[parameters('pingTestList')[copyIndex()].kind]",
				"RetryEnabled": "[parameters('pingTestList')[copyIndex()].retryEnabled]",
				"Locations": "[parameters('pingTestList')[copyIndex()].locations]",
				"Configuration": {
					"WebTest": "[concat('<WebTest Name=\"', parameters('pingTestList')[copyIndex()].shortName, '\"',  '   Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"', parameters('pingTestList')[copyIndex()].url ,'\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('pingTestList')[copyIndex()].expected ,'\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
				},
				"SyntheticMonitorId": "[concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName)]"
			},
			"copy": {
				"name": "pingTestListLoop",
				"count": "[length(parameters('pingTestList'))]"
			}
		},
		{
			"apiVersion": "2018-03-01",
			"location": "global",
			"scale": null,
			"name": "[concat('MetricAlert-', parameters('pingTestList')[copyIndex()].shortName)]",
			"properties": {
				"description": "[parameters('pingTestList')[copyIndex()].descriptionMetricAlert]",
				"severity": "[parameters('pingTestList')[copyIndex()].severity]",
				"enabled": "[parameters('pingTestList')[copyIndex()].enabledMetricAlert]",
				"scopes": [
					"[resourceId('Microsoft.Insights/webtests', concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName))]",
					"[resourceId('Microsoft.Insights/components', parameters('pingTestList')[copyIndex()].applicationInsightsName)]"
				],
				"evaluationFrequency": "[parameters('pingTestList')[copyIndex()].evaluationFrequency]",
				"windowSize": "[parameters('pingTestList')[copyIndex()].windowSize]",
				"templateType": 0,
				"criteria": {
					"odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
					"webTestId": "[resourceId('Microsoft.Insights/webtests', concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName))]",
					"componentId": "[resourceId('Microsoft.Insights/components', parameters('pingTestList')[copyIndex()].applicationInsightsName)]",
					"failedLocationCount": "[parameters('pingTestList')[copyIndex()].failedCount]"
				},
				"actions": [
					{
						"actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('pingTestList')[copyIndex()].actionGroup)]"
					}
				]
			},
			"tags": "[parameters('pingTestList')[copyIndex()].tags]",
			"dependsOn": [
				"[resourceId('Microsoft.Insights/webtests', concat('PingTest-', parameters('pingTestList')[copyIndex()].shortName))]",
				"[resourceId('Microsoft.Insights/components', parameters('pingTestList')[copyIndex()].applicationInsightsName)]",
				"[resourceId('Microsoft.Insights/actionGroups', parameters('pingTestList')[copyIndex()].actionGroup)]"
			],
			"type": "Microsoft.Insights/metricAlerts",
			"copy": {
				"name": "pingTestListLoop",
				"count": "[length(parameters('pingTestList'))]"
			}
		}
	]
}
